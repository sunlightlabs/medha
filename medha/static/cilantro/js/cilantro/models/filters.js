define(["jquery","underscore","backbone"],function(t,e,n){var i=function(t){var e="";if(t.concept&&(e+="c"+t.concept),t.field&&(e+="f"+t.field),!e)throw new Error("Cannot generate id for filter");return e},r=n.Model.extend({constructor:function(t,e){t&&!t.id&&(t[this.idAttribute]=i(t)),n.Model.prototype.constructor.call(this,t,e)},generateId:function(t){return i(t)},clear:function(t){var n=e.clone(this.attributes);delete n.id,delete n.field,delete n.concept,e.each(n,function(t,e){n[e]=void 0}),this.set(n,e.defaults({unset:!0},t))},sync:function(){},apply:function(t){this.trigger("apply",this,t)},unapply:function(t){this.trigger("unapply",this,t)},toJSON:function(n){n=e.defaults(n||{},{id:!1});var i=t.extend(!0,{},this.attributes);return n.id||delete i[this.idAttribute],i},isEnabled:function(){return this.get("enabled")!==!1},toggleEnabled:function(){this.set("enabled",!this.isEnabled())}}),o=n.Collection.extend({model:r,constructor:function(t,i){i=e.defaults({parse:!0},i),n.Collection.prototype.constructor.call(this,t,i)},sync:function(){},apply:function(t){this.trigger("apply",this,t)},unapply:function(t){this.trigger("unapply",this,t)},parse:function(t){if(e.isArray(t))e.each(t,function(t){t.id||(t.id=this.model.prototype.generateId(t))});else{var n=t||{};if(t=[],n.field){var i=this.model.prototype.generateId(n);t.push(e.extend({id:i},n))}else if(n.children){var r=n.concept;e.each(n.children,function(n){void 0!==r&&(n=e.extend({concept:r},n)),t=t.concat(this.parse(n))},this)}}return t}});return{Filter:r,Filters:o}});
//# sourceMappingURL=filters.js
//# sourceMappingURL=filters.js.map